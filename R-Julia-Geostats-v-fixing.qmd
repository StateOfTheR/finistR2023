---
title: "Untitled"
format: md
jupyter: julia-1.8
---

## Biblioth√®ques Julia
```{julia}
#| output: false
# Import package
using GeoDataFrames, Distributed, StatsAPI, Plots, DelimitedFiles, DataFrames, CSV, GeoStats, Rasters,  Shapefile,GeoTables, CairoMakie; const GDF=GeoDataFrames; import WGLMakie as Mke
```

## Importer les donn√©es
```{julia}
#| output: false

# Get the current working directory
current_directory = pwd()

#import data
meuse = CSV.read(joinpath(current_directory,"meuse.txt"),DataFrame;delim="," )
meuse_grid = CSV.read(joinpath(current_directory, "meuse.grid.txt"),DataFrame; delim=",")
meuse_geom = georef(CSV.File(joinpath(current_directory,"meuse.txt")),(:x,:y,:cadmium))

#describe data
describe(meuse)
describe(meuse_grid)
```

## Transformation en donn√©es spatiale
```{julia}
#| output: false
#add log zinc to the data
logmeuse = log.(meuse.zinc)
meuse.logzinc = logmeuse

#create coord of data meuse
coord = [(x, y) for (x, y) in zip(meuse.x, meuse.y)]
#create spatial object of meuse
meuselog = georef(meuse[:,["x","y","logzinc"]],coord)

# list of properties with coordinates
props = (logzinc=meuse.logzinc,)
ùíü = georef(props, coord)
```

## Variogramme

Le fit pour tester les diff√©rents variogramme va nous donner le SineHoleVariogram avec tous les param√®tres optimis√©. On d√©cide √† la base d'utiliser ce dernier mais il s'av√®re qu'il ne donne pas de bon r√©sultat pour le Krigeage. On utilisera donc un variogramme de Mat√©rn. Si vous voulez observer ce dernier dans le krigeage il suffira de mettre dans la fonction kriging, le variogramme d√©sir√©.
```{julia}
#| output: false
# empirical variogram

@time empvario = EmpiricalVariogram(meuselog, :logzinc, maxlag = 2000.)

## plot of empirical variogram
# Mke.plot(empvario) plot interactive
# CairoMakie.plot(empvario) #plot sans interaction
## plot theorical variogram
# CairoMakie.plot(MaternVariogram(range=691, nugget=0.04))
# CairoMakie.plot(SineHoleVariogram(range=691, nugget=0.25))

#fit theorical and empirical variogramand 
@time fitvario = fit(Variogram, empvario)

# CairoMakie.plot(empvario)
# CairoMakie.plot!(fitvario, maxlag = 2000.)
# CairoMakie.current_figure()
```

## Cr√©ation de la grille
```{julia}
#| output: false
# grid creation
# Convert the x and y coordinates to numeric arrays
x_coords = Float64.(meuse.x)
y_coords = Float64.(meuse.y)# Create the Cartesian grid dimensions, origin, and spacing
dims = (100, 100)  # Number of grid points in x and y directions
origin = (minimum(x_coords), minimum(y_coords)) # Lower left corner of the grid
spacing = ((maximum(x_coords) - minimum(x_coords)) / (dims[1] - 1),
           (maximum(y_coords) - minimum(y_coords)) / (dims[2] - 1)) 
 # Cell spacing in x and y directions# Create the CartesianGrid
ùí¢ = CartesianGrid(dims, origin, spacing)
```

## Krigeage
```{julia}
#| output: false
ùí´ = EstimationProblem(ùíü, ùí¢, :logzinc)

@time ùíÆ = Kriging(:logzinc => (variogram=MaternVariogram(nugget = 0.21,sill = 0.59,range=706.78),))

# perform estimation
@time Œ© = solve(ùí´, ùíÆ)

# CairoMakie.plot(Œ©.geometry, color = Œ©.logzinc_variance)
```

## Affichage du Krigeage

```{julia}
#Export Kriging
GeoTables.save(joinpath(current_directory,"data_geostats_julia/Kriging2.shp"), Œ©,force=true )

#read kriging
shape =  Shapefile.Handle(joinpath(current_directory,"data_geostats_julia/Kriging2.shp")).shapes
# read grid 
grid_shp =  Shapefile.Handle(joinpath(current_directory,"data_geostats_julia/boundary1.shp")).shapes

# Define a reducer function (e.g., to sum values within each cell)
reducer(cell_values) = sum(cell_values)

rasterized_krig = rasterize(shape, fill=Œ©.logzinc, reducer = reducer, size=(100, 100))
Plots.plot(rasterized_krig)
```


```{julia}
#Crop 
masked = mask(rasterized_krig,with=grid_shp)
Plots.plot(masked, title = "Krigeage logzinc")
```



# 4 - Comparaison

+-----------------------------------------------------------+-------------------------------------------+--------------------------------------------+-------------------------------------------------------------------+
| Package                                                   | R : gstat                                 | R : GeoModels                              | Julia : GeoStats                                                  |
+===========================================================+===========================================+============================================+===================================================================+
| Type de donn√©es d'entr√©e                                  | sp, sf                                    | matrices, vecteurs                         | dataframes                                                        |
|                                                           |                                           |                                            |                                                                   |
|                                                           |                                           |                                            | Coordon√©es de type CartesianGrid                                  |
|                                                           |                                           |                                            |                                                                   |
|                                                           |                                           |                                            | Inconv√©nient : peu de documentation - difficile √† prendre en main |
+-----------------------------------------------------------+-------------------------------------------+--------------------------------------------+-------------------------------------------------------------------+
| Documentation                                             | CRAN                                      | CRAN                                       | <https://github.com/JuliaEarth/GeoStats.jl>                       |
|                                                           |                                           |                                            |                                                                   |
|                                                           |                                           | https://vmoprojs.github.io/GeoModels-page/ | https://juliapackages.com/p/geostats                              |
+-----------------------------------------------------------+-------------------------------------------+--------------------------------------------+-------------------------------------------------------------------+
| Estimation de param√®tres du variogramme                   | Moindres carr√©s sur variogramme empirique | Vraisemblance composite sur les donn√©es    | Moindres carr√©s sur le variogramme empirique                      |
|                                                           |                                           |                                            |                                                                   |
|                                                           | 1 mod√®le √† la fois au choix               | 1 mod√®le √† la fois                         | Tous les mod√®les disponibles √† la fois                            |
|                                                           |                                           |                                            |                                                                   |
|                                                           |                                           | Param√®tres fixes ou variables au choix     |                                                                   |
+-----------------------------------------------------------+-------------------------------------------+--------------------------------------------+-------------------------------------------------------------------+
| Vitesse d'ex√©cution - estimation du variogramme empirique | 0.05s                                     | 0.07s                                      | 0.012s                                                            |
+-----------------------------------------------------------+-------------------------------------------+--------------------------------------------+-------------------------------------------------------------------+
| Vitesse d'ex√©cution - estimation du variogramme th√©orique | 0.04s                                     | 1.15s                                      | 0.05s (TOUS LES MODELES)                                          |
+-----------------------------------------------------------+-------------------------------------------+--------------------------------------------+-------------------------------------------------------------------+
| Vitesse d'ex√©cution - krigeage                            | 0.42s                                     | 0.87s                                      | 0.08s (Kriging)                                                   |
|                                                           |                                           |                                            |                                                                   |
|                                                           |                                           |                                            | 10.6s (solve)                                                     |
+-----------------------------------------------------------+-------------------------------------------+--------------------------------------------+-------------------------------------------------------------------+
